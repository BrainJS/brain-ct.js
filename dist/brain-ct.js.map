{"version":3,"sources":["../src/brain-ct.js"],"names":["BrainCT","net","inputGenerators","randomInputGenerators","i","sizes","push","iterations","results","inputs","map","iG","value","outputs","Array","prototype","slice","call","run"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,O;AACnB,mBAAYC,GAAZ,EAAiBC,eAAjB,EAAkC;AAAA;;AAChC,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,eAAL,GAAuBA,mBAAmB,KAAKC,qBAAL,EAA1C;AACD;;;;4CAEuB;AACtB,UAAMD,kBAAkB,EAAxB;AACA,WAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,KAAKH,GAAL,CAASI,KAAT,CAAe,CAAf,CAApB,EAAuCD,GAAvC,EAA4C;AAC1CF,wBAAgBI,IAAhB,CAAqB,2BAArB;AACD;AACD,aAAOJ,eAAP;AACD;;;6BAEQK,U,EAAY;AACnB,UAAMC,UAAU,EAAhB;AACA,WAAK,IAAIJ,IAAI,CAAb,EAAgBA,IAAIG,UAApB,EAAgCH,GAAhC,EAAqC;AACnC,YAAMK,SAAS,KAAKP,eAAL,CAAqBQ,GAArB,CAAyB;AAAA,iBAAMC,GAAGC,KAAH,EAAN;AAAA,SAAzB,CAAf;AACA,YAAMC,UAAUC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKhB,GAAL,CAASiB,GAAT,CAAaT,MAAb,CAA3B,CAAhB;AACAD,gBAAQF,IAAR,CAAa;AACXG,wBADW;AAEXI;AAFW,SAAb;AAID;;AAED,aAAOL,OAAP;AACD;;;;;;kBA1BkBR,O","file":"brain-ct.js","sourcesContent":["import RandomInput from './random-input';\n\nexport default class BrainCT {\n  constructor(net, inputGenerators) {\n    this.net = net;\n    this.inputGenerators = inputGenerators || this.randomInputGenerators();\n  }\n\n  randomInputGenerators() {\n    const inputGenerators = [];\n    for (let i = 0; i < this.net.sizes[0]; i++) {\n      inputGenerators.push(new RandomInput());\n    }\n    return inputGenerators;\n  }\n\n  scanSync(iterations) {\n    const results = [];\n    for (let i = 0; i < iterations; i++) {\n      const inputs = this.inputGenerators.map(iG => iG.value());\n      const outputs = Array.prototype.slice.call(this.net.run(inputs));\n      results.push({\n        inputs,\n        outputs\n      });\n    }\n\n    return results;\n  }\n}"]}